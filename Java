/*
 * This program encrypts and decrypts messages by inputting a message
 * and stating the number of rows you'd like the encryption to contain.
 * Author: Paige Wiley
 * Date:
 */
package com.example.cryptographyproject;

import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;

import android.content.DialogInterface;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.Button;
import android.widget.RadioButton;
import android.widget.TextView;

public class MainActivity extends AppCompatActivity implements View.OnClickListener{
boolean caesar = false;
boolean vigenere = false;
boolean scytale = false;
TextView shifts;
TextView encryptMsg;
TextView decryptMsg;
TextView output;
String encryptWord;
String decryptWord;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);


        shifts = this.findViewById(R.id.inputShifts);
        encryptMsg = this.findViewById(R.id.inputEncrypt);
        decryptMsg = this.findViewById(R.id.inputDecrypt);

        //convert textview messages into strings
        encryptWord = encryptMsg.getText().toString();
        decryptWord = decryptMsg.getText().toString();

        output = this.findViewById(R.id.outputMes);


    }




    //When a radio button is clicked
    public void onRadioButtonClicked(View view){

        /*
         * I used code from the Android developers api
         * URL: https://developer.android.com/guide/topics/ui/controls/radiobutton
         * I used this code to check which radio button was clicked.
         */
        boolean checked = ((RadioButton) view).isChecked();

        switch(view.getId()){
            case R.id.cipherCaesar:
                if(checked)
                    caesar = true;
                break;
            case R.id.cipherScy:
                if(checked)
                    scytale = true;
                break;
            case R.id.cipherVig:
                if(checked)
                    vigenere = true;
                break;
        }
    }

    //When encrypt/decrypt buttons are pushed
    public void onClick(View view) {
       Button btn = (Button)view;


        //encrypt the encrypt message
       if(btn.getText().equals("Encrypt")){
         if(caesar){ //if caesar is picked
            encryptCaesar();
         } else if (vigenere) { //if vigenere is picked
           // encryptVigenere();
         }else if (scytale) { //if scytale is picked
            // encryptScytale();
         }
           //decrypt the decrypt message
       }else if(btn.getText().equals("Decrypt")){
           if(caesar){ //if caesar is picked

           } else if (vigenere) { //if vigenere is picked

           }else if (scytale) { //if scytale is picked

           }
       }
    }

    public void encryptCaesar(){
       System.out.println("Caesar encrypt");
        /*
         *I used code from stackoverflow.com
         * URL: https://stackoverflow.com/questions/15037465/converting-edittext-to-int-android
         * I used this code to convert an edit text widget into an integer for the number of shifts in the ciphers.
         */
        String strgHeight = shifts.getText().toString();
        int height = Integer.parseInt(strgHeight);



        int width = encryptWord.length() % height + 1;
        char[][] caesarArray = new char[height][width];

        for (int y = 0; y < height - encryptWord.length()%height; y++){ //for each row
            for(int x = 0; x < width; x++) {
                caesarArray[y][x] = encryptWord.charAt(x + 2*y);
            }
        }
        for(int y = height - encryptWord.length()%height; y < height; y++){
            for(int x = 0; x < width; x++){
                if(x != width - 1) {
                    caesarArray[y][x] = encryptWord.charAt(x + 2 * y);
                }else{
                    caesarArray[y][x] = '@';
                }
            }
        }
        String outputMsg = null;
        for(int x = 0; x < 0; x++){//through each column
            for(int y = 0; y < 0; y++){//through each row
                outputMsg += caesarArray[y][x];
            }
            output.setText(outputMsg);
            System.out.println(outputMsg);
        }

    }


         //create more text fields in the main layout and hide them from view. Once encrypt or decrypt button is clicked, make visible
}
